<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
<title> Middlewared Dancer: our usage of middlewares | PerlDancer Advent Calendar</title>
<link rel="stylesheet" href="/css/style.css" />
<link rel="alternate" type="application/rss+xml" title="All Articles " href="/feed/2014" /> 


<!-- Grab Google CDN's jQuery. fall back to local if necessary -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">/* <![CDATA[ */
    !window.jQuery && document.write('<script src="/javascripts/jquery.js"><\/script>')
/* ]]> */</script>

<!-- Prettyfy -->
<link href="/css/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="/javascripts/prettify.js"></script>

</head>
<body onload="prettyPrint()">
<div id="page">

<div id="sidebar">
<a href="/" class="homelink">Dancer Advent Calendar</a><br />

<p>
The PerlDancer Advent Calendar is a community-driven project that aims 
to showcase the Dancer Perl web framework.
</p>

<p>
Each day of December until Christmas, one article about Dancer. Stay tuned for new moves!
</p>

<ul id="sidebar-items">
<li>
    <h3>About Dancer</h3>
    <ul class="links">
        <li><a href="http://www.perldancer.org/">Dancer homepage</a></li>
        <li><a href="http://twitter.com/PerlDancer">Official Twitter</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer">Dancer on GitHub</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer2">Dancer 2 on GitHub</a></li>
        <li><a class="feed" href="/feed/2014">RSS</a></li>
    </ul>
</li>
</ul>
</div>


<div id="content">
<div class="pod-document"><h1><a name="middlewared_dancer__our_usage_of_middlewares"></a>Middlewared Dancer: our usage of middlewares</h1>

<p>Now that we understand what
<a href="http://advent.perldancer.org/2014/20">middlewares</a> are and how to use
them, we would like to share a small secret with which we ended the
previous article.</p>
<p>While much of the existing middlewares provide additional features, there
are middlewares that can help supplement a web framework or reduce the
amount of work it does.</p>
<p>In <a href="https://metacpan.org/module/Dancer2">Dancer2</a> we rely heavily on Plack and therefore middlewares provide
much-appreciated help which plays well with our framework, since it's all
<a href="https://metacpan.org/module/PSGI">PSGI</a> at the end of the day.</p>
<p>Here are the current middlewares we use internally in Dancer2:</p>
<h2><a name="static"></a>Static</h2>

<p>First, as described in
<a href="http://advent.perldancer.org/2014/6">a previous article</a>,
Dancer2 now uses <a href="https://metacpan.org/module/Plack::Middleware::Static">Plack::Middleware::Static</a> to provide static files.</p>
<p>This helped provide consistency with both the previous behavior
(a la Dancer 1) and with how users actually expect static file serving
to work.</p>
<h2><a name="head"></a>Head</h2>

<p>Using <a href="https://metacpan.org/module/Plack::Middleware::Head">Plack::Middleware::Head</a>, we can provide correct <b>HEAD</b> requests
much more easily. A <b>HEAD</b> request should not have a body, and the
middleware simply deletes the body of a response if the request method is
<b>HEAD</b>.</p>
<p>This allows us to define every <b>GET</b> request as <b>HEAD</b> and have the
middleware delete the response body to produce an appropriate response.</p>
<p>One less concern!</p>
<h2><a name="contentlength"></a>ContentLength</h2>

<p>Originally Dancer2 would have to set the length of a response content body
every time it was set. Although this could have been improved by only
setting it at the very end, we would still have to account for three kinds
of responses available in PSGI.</p>
<p>Instead, we're using <a href="https://metacpan.org/module/Plack::Middleware::ContentLength">Plack::Middleware::ContentLength</a> to decide and set
the <b>Content-Length</b> header for us after we've returned a response. Our
code is thus cleaner and less error-prone.</p>
<h2><a name="fixmissingbodyinredirect"></a>FixMissingBodyInRedirect</h2>

<p>Having <a href="https://metacpan.org/module/Plack::Middleware::FixMissingBodyInRedirect">Plack::Middleware::FixMissingBodyInRedirect</a> provides the proper
response body when a user returns a redirect. You don't have to care about
it anymore, it's simply there, automagically.</p>
<h2><a name="removeredundantbody"></a>RemoveRedundantBody</h2>

<p>When returning a status of <b>204</b> or <b>304</b> the body needs to be stripped.</p>
<p><a href="https://metacpan.org/module/Plack::Middleware::RemoveRedundantBody">Plack::Middleware::RemoveRedundantBody</a> takes care of that for us. Since
it uses <a href="https://metacpan.org/module/Plack::Util">Plack::Util</a>'s <code>status_with_no_entity_body</code>, it also takes care
of statuses <b>100</b> and <b>101</b>, which were not covered beforehand.</p>
<h2><a name="conclusion"></a>Conclusion</h2>

<p>When writing a web framework, you (or at least we) would
like to focus on the features and richness of the DSL and syntax, and not
the small details of HTTP implementations.</p>
<p>Using middlewares reduces the amount of work we do to keep up with all of
these small bits and does a damn fine job at it.</p>
<p>We will continue to explore new middlewares we can make use of, and perhaps
even push some of our code into middlewares so it could be decoupled and
even used by non-Dancer code.</p>
<h2><a name="author"></a>Author</h2>

<p>This article has been written by Sawyer X for the Perl
Dancer Advent Calendar 2014.</p>
<h2><a name="copyright"></a>Copyright</h2>

<p>No copyright retained. Enjoy.</p>
<p>2014 // Sawyer X <code>&lt;xsawyerx@cpan.org&gt;</code></p>
</div>

 <div id="disqus_thread"></div>
    <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'danceradvent'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>




</div>



<div id="footer">
Powered by the  
<a href="http://perldancer.org/" title="Perl Dancer - Perl web framework">
Dancer Perl web framework</a>
</div>
</div>


<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-25174467-2']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body>
</html>
