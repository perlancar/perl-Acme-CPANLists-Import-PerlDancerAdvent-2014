<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
<title> Hidden feature: Auto Pages | PerlDancer Advent Calendar</title>
<link rel="stylesheet" href="/css/style.css" />
<link rel="alternate" type="application/rss+xml" title="All Articles " href="/feed/2014" /> 


<!-- Grab Google CDN's jQuery. fall back to local if necessary -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">/* <![CDATA[ */
    !window.jQuery && document.write('<script src="/javascripts/jquery.js"><\/script>')
/* ]]> */</script>

<!-- Prettyfy -->
<link href="/css/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="/javascripts/prettify.js"></script>

</head>
<body onload="prettyPrint()">
<div id="page">

<div id="sidebar">
<a href="/" class="homelink">Dancer Advent Calendar</a><br />

<p>
The PerlDancer Advent Calendar is a community-driven project that aims 
to showcase the Dancer Perl web framework.
</p>

<p>
Each day of December until Christmas, one article about Dancer. Stay tuned for new moves!
</p>

<ul id="sidebar-items">
<li>
    <h3>About Dancer</h3>
    <ul class="links">
        <li><a href="http://www.perldancer.org/">Dancer homepage</a></li>
        <li><a href="http://twitter.com/PerlDancer">Official Twitter</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer">Dancer on GitHub</a></li>
        <li><a href="http://github.com/PerlDancer/Dancer2">Dancer 2 on GitHub</a></li>
        <li><a class="feed" href="/feed/2014">RSS</a></li>
    </ul>
</li>
</ul>
</div>


<div id="content">
<div class="pod-document"><h1><a name="hidden_feature__auto_pages"></a>Hidden feature: Auto Pages</h1>

<p>One feature we love in Dancer (both <a href="https://metacpan.org/module/Dancer">Dancer 1</a> and
<a href="https://metacpan.org/module/Dancer2">Dancer 2</a>) is the <i>AutoPage</i> feature.</p>
<h2><a name="auto_what"></a>Auto-what?</h2>

<p>Most websites provide web pages - multiple web pages. Many web pages will
have a template and not just static content.</p>
<p>Rendering a template is simple:</p>
<pre class="prettyprint">get '/users/view' =&gt; sub {
    template 'view' =&gt; {...};
};</pre>

<p>Assuming we have over 40 different pages, this becomes an arduous task of
writing endpoints for each template, then keeping those up-to-date and
continuing to add more.</p>
<p>If only. If only someone would have come up with a feature that allowed
automatically rendering templates by path. If only someone named
<b>David Precious</b>, who is now handling the absurd responsibility of
fatherhood while leaving <b>Sawyer X</b> to handle the
<a href="http://advent.perldancer.org">Dancer Advent Calendar</a> all on his own,
would have that idea and have already implemented it in Dancer 1, thus
having it available from the early days of Dancer 2... oh wait, he did!</p>
<h2><a name="how"></a>How</h2>

<p><i>AutoPage</i> is a simple feature that you would love. Turning it on is
as simple as:</p>
<pre class="prettyprint">set auto_page =&gt; 1;</pre>

<p>or in your configuration file:</p>
<pre class="prettyprint">auto_page: 1</pre>

<p>Dancer will take care of the rest.</p>
<p>At this point, you might be wondering what it really does.</p>
<h2><a name="behind_the_scenes"></a>Behind the scenes</h2>

<p>What <i>AutoPage</i> does is very simple: when a request was not served by a
static file or by a user defined route, it looks for a template that
matches the path. If it finds one, it renders it.</p>
<p>This means that the request <code>/users/edit</code> will first try to match a
file, failing that it will try to match a route, and then, if still
unsuccessful, it will go to <i>AutoPage</i>. <i>AutoPage</i> will search for
a template under <code>views/users/</code> named <code>edit.tt</code>, assuming your <i>views</i>
directory is <code>views</code> and your templating engine default extension is
<code>.tt</code>.</p>
<p><i>AutoPage</i> will adhere to your <code>views</code> and your templating system
extension, so if those change, it will still work. It will also not
render the layouts themselves, so you don't need to worry about someone
being a smart-ass.</p>
<h2><a name="another_reason_it_s_awesome"></a>Another reason it's awesome</h2>

<p>By fully rendering a template, not just statically serving it, you
have the full range of request variables. That means that any code in
your templates that requires variables (or callbacks) will work:</p>
<pre class="prettyprint"># in layout/main.tt:
Served by [% dancer_version %]</pre>

<p>This will work just fine. But what about variables we're adding in
our code using the <code>before_template_render</code> hook?</p>
<pre class="prettyprint"># in MyApp.pm:
use Time::HiRes 'time';
hook before_template_render =&gt; sub {
    my $tokens = shift;
    $tokens-&gt;{'timestamp'} = time;
};

# in users/edit.tt:
Request timestamp: [% timestamp %]</pre>

<p>Why would you put the timestamp there? I don't know. It's yet another
contrived example that shows how you can add variables that will be
accessible to the template rendered by <i>AutoPage</i>.</p>
<h2><a name="conclusion"></a>Conclusion</h2>

<p>The <i>AutoPage</i> feature is probably one of the nicest subtle features
in Dancer. We don't hide it, but we also don't make it abundantly clear
to users how awesome it is and how you most likely want to use it.</p>
<p>At the end of the day, this feature also serves as yet another reason
to buy David Precious a drink, which will finally force him to come
to some public Perl event. This is all part of our secret plan.</p>
<h2><a name="author"></a>Author</h2>

<p>This article has been written by Sawyer X for the Perl
Dancer Advent Calendar 2014.</p>
<h2><a name="copyright"></a>Copyright</h2>

<p>No copyright retained. Enjoy.</p>
<p>2014 // Sawyer X <code>&lt;xsawyerx@cpan.org&gt;</code></p>
</div>

 <div id="disqus_thread"></div>
    <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'danceradvent'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>




</div>



<div id="footer">
Powered by the  
<a href="http://perldancer.org/" title="Perl Dancer - Perl web framework">
Dancer Perl web framework</a>
</div>
</div>


<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-25174467-2']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body>
</html>
